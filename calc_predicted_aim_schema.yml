# Holds the variables needed to calculate match predictions

# TODO: add example predicted_aim dict here


# Contains information about this schema file
schema_file:
  # Version of schema file
  # Incremented every merged schema change
  version: 2

# TODO: change back to nested variables once validation is fixed
--tele_fields:
  score: [tele_avg_amp, tele_avg_speaker, tele_avg_amplified]
  cycle_time: [avg_expected_cycles, avg_expected_notes]

# Fields used to calculate ensemble RP and endgame score
--endgame_fields:
  onstage_rate: stage_percent_success_all
  park_rate: parked_percent
  climb_after_rate: climb_after_percent_success
  trap_rate: trap_percent_success

# Fields used to calculate win chance
--win_chance:
  auto_avg_amp:
    sd: auto_sd_amp
    weight: 2
  auto_avg_speaker:
    sd: auto_sd_speaker
    weight: 5
  tele_avg_amp:
    sd: tele_sd_amp
    weight: 1
  tele_avg_speaker:
    sd: tele_sd_speaker
    weight: 2
  tele_avg_amplified:
    sd: tele_sd_amplified
    weight: 5
  endgame_avg_total_points:
    sd: endgame_sd_total_points
    weight: 1

--score_weights:
  auto: [_auto_speaker, _auto_amp, _num_leave]
  tele: [_tele_speaker_all, _tele_amp]
  endgame: [_num_onstage, _num_trap, _num_park]

# Stores fields that will be added to database but do not require calculations
data:
  match_number:
    type: int
  team_numbers: 
    type: List 
  alliance_color_is_red:
    type: bool
  # Whether or not actual TBA data has been pulled to replace the predicted data
  has_actual_data:
    type: bool
  actual_score:
    type: int
  # Charge RP
  actual_rp1:
    type: float
  # Link RP
  actual_rp2:
    type: float
  won_match:
    type: bool
