# Used for running team calcs in Server
#
# Example:
#
# {
#     "team_number": "5683",
#    "auto_avg_amp": 2.1114,
#    "auto_avg_speaker": 1.3233,
#    "auto_avg_total_intakes": 2.926,
#    "auto_avg_total_pieces": 5.6445,
#    "tele_avg_amp": 2.9809,
#    "tele_avg_speaker": 3.9741,
#    "tele_avg_speaker_amped": 6.3262,
#    "tele_avg_intakes_amp": 5.2139,
#    "tele_avg_intakes_center": 5.3315,
#    "tele_avg_intakes_far": 4.3327,
#    "tele_avg_intakes_poach": 4.7194,
#    "tele_avg_shoot_other": 0.3274,
#    "tele_avg_total_intakes": 3.587,
#    "tele_avg_total_pieces": 2.0606,
#    "avg_driver_ability": 6.1973,
#    "avg_failed_score": 5.8277,
#    "avg_incap_time": 0.8858,
#    "avg_total_intakes": 1.7679,
#    "avg_total_pieces": 4.1947,
#    "lfm_auto_avg_speaker": 2.1985,
#    "lfm_auto_avg_amp": 2.0293,
#    "lfm_auto_avg_total_intakes": 4.426,
#    "lfm_auto_avg_total_pieces": 5.7537,
#    "lfm_tele_avg_speaker": 4.367,
#    "lfm_tele_avg_amp": 4.6392,
#    "lfm_tele_avg_intakes_poach": 1.369,
#    "lfm_tele_avg_intakes_center": 2.999,
#    "lfm_tele_avg_intakes_far": 4.3648,
#    "lfm_tele_avg_intakes_amp": 3.5951,
#    "lfm_avg_incap_time": 0.6634,
#    "lfm_tele_avg_shoot_other": 0.0162,
#    "lfm_avg_failed_scores": 4.4105,
#    "lfm_tele_avg_total_intakes": 6.1701,
#    "lfm_tele_avg_total_pieces": 2.946,
#    "lfm_avg_total_intakes": 3.4715,
#    "lfm_avg_total_pieces": 5.4621,
#    "lfm_tele_avg_speaker_amped": 0.3771,
#    "auto_sd_amp": 2.3652,
#    "auto_sd_speaker": 2.0062,
#    "auto_sd_total_intakes": 2.3103,
#    "auto_sd_total_pieces": 1.9576,
#    "tele_sd_amp": 6.9008,
#    "tele_sd_speaker": 3.0217,
#    "tele_sd_speaker_amped": 5.4839,
#    "tele_sd_intakes_amp": 2.7427,
#    "tele_sd_intakes_center": 4.8698,
#    "tele_sd_intakes_far": 1.9999,
#    "tele_sd_intakes_poach": 1.2625,
#    "tele_sd_shoot_other": 6.5984,
#    "tele_sd_total_intakes": 6.9338,
#    "tele_sd_total_pieces": 0.2558,
#    "sd_failed_score": 5.0361,
#    "sd_incap_time": 3.532,
#    "sd_total_intakes": 4.8668,
#    "sd_total_pieces": 5.2559,
#    "lfm_auto_sd_total_pieces": 3.9951,
#    "lfm_tele_sd_total_pieces": 6.9248,
#    "endgame_attempts": 8,
#    "onstage_attempts": 1,
#    "onstage_successes": 4,
#    "parks": 1,
#    "stage_fails": 2,
#    "position_zero_starts": 4,
#    "position_one_starts": 4,
#    "position_two_starts": 6,
#    "position_three_starts": 9,
#    "preloaded_starts": 1,
#    "matches_incap": 8,
#    "matches_played": 7,
#    "lfm_endgame_attempts": 2,
#    "lfm_onstage_attempts": 8,
#    "lfm_onstage_successes": 4,
#    "lfm_parks": 4,
#    "lfm_stage_fails": 2,
#    "lfm_position_zero_starts": 4,
#    "lfm_position_one_starts": 9,
#    "lfm_position_two_starts": 1,
#    "lfm_position_three_starts": 2,
#    "lfm_preloaded_starts": 4,
#    "lfm_matches_incap": 2,
#    "matches_tippy": 3,
#    "lfm_matches_tippy": 7,
#    "matches_climb_after": 6,
#    "lfm_matches_climb_after": 2,
#    "matches_played_defense": 7,
#    "lfm_matches_played_defense": 7,
#    "auto_max_speaker": 7,
#    "auto_max_amp": 4,
#    "auto_max_total_intakes": 7,
#    "auto_max_total_pieces": 8,
#    "tele_max_speaker": 4,
#    "tele_max_amp": 2,
#    "tele_max_shoot_other": 1,
#    "tele_max_total_intakes": 3,
#    "tele_max_total_pieces": 5,
#    "max_incap_time": 9,
#    "max_failed_scores": 3,
#    "max_total_intakes": 6,
#    "max_total_pieces": 7,
#    "lfm_auto_max_speaker": 1,
#    "lfm_auto_max_amp": 2,
#    "lfm_auto_max_total_intakes": 1,
#    "lfm_auto_max_total_pieces": 7,
#    "lfm_tele_max_speaker": 8,
#    "lfm_tele_max_amp": 5,
#    "lfm_tele_max_shoot_other": 3,
#    "lfm_tele_max_total_intakes": 3,
#    "lfm_tele_max_total_pieces": 7,
#    "lfm_max_incap_time": 3,
#    "lfm_max_failed_scores": 4,
#    "lfm_max_total_intakes": 4,
#    "lfm_max_total_pieces": 2,
#    "mode_start_position": [
#        1,
#        3
#    ],
#    "lfm_mode_start_position": [
#        2,
#        3,
#        1,
#        1
#    ],
#    "mode_stage_level": [
#        "N",
#        "P",
#        "O"
#    ],
#    "lfm_mode_stage_level": [
#        "P",
#        "F",
#        "N"
#    ],
#    "onstage_percent_success": 2.5257,
#    "lfm_onstage_percent_success": 3.9476,
#    "onstage_percent": 0.1089,
#    "park_percent": 5.2275,
#    "median_nonzero_incap_time": 5.8237,
#    "lfm_median_nonzero_incap_time": 2.2466,
#    "auto_avg_total_points": 6.5624,
#    "tele_avg_total_points": 5.2619,
#    "avg_endgame_points": 5.7022,
#    "avg_total_points": 1.7028,
#    "total_incap": 9,
#    "lfm_total_incap": 2
# }
#

# Contains information about this schema file
schema_file:
  # Version of schema file
  # Incremented every merged schema change
  version: 2

# Stores fields that will be added to database but do not require calculations
data:
  team_number:
    type: str

# Averages of fields in consolidated TIMs
averages:
  auto_avg_amp:
    tim_fields: [obj_tim.auto_amp]
    type: float
  auto_avg_speaker:
    tim_fields: [obj_tim.auto_speaker]
    type: float
  auto_avg_total_intakes:
    tim_fields: [obj_tim.auto_total_intakes]
    type: float
  auto_avg_total_pieces:
    tim_fields: [obj_tim.auto_total_pieces]
    type: float
  tele_avg_amp:
    tim_fields: [obj_tim.tele_amp]
    type: float
  tele_avg_speaker:
    tim_fields: [obj_tim.tele_speaker]
    type: float
  tele_avg_speaker_amped:
    tim_fields: [obj_tim.tele_speaker_amped]
    type: float
  tele_avg_intakes_amp:
    tim_fields: [obj_tim.tele_intakes_amp]
    type: float
  tele_avg_intakes_center:
    tim_fields: [obj_tim.tele_intakes_center]
    type: float
  tele_avg_intakes_far:
    tim_fields: [obj_tim.tele_intakes_far]
    type: float
  tele_avg_intakes_poach:
    tim_fields: [obj_tim.tele_intakes_poach]
    type: float
  tele_avg_shoot_other:
    tim_fields: [obj_tim.tele_shoot_other]
    type: float
  tele_avg_total_intakes:
    tim_fields: [obj_tim.tele_total_intakes]
    type: float
  tele_avg_total_pieces:
    tim_fields: [obj_tim.tele_total_pieces]
    type: float
  avg_failed_score:
    tim_fields: [obj_tim.failed_score]
    type: float
  tele_failed_score_amp:
    type: int
    tim_fields: [obj_tim.tele_failed_score_amp]
  tele_failed_score_speaker:
    type: int
    tim_fields: [obj_tim.tele_failed_score_speaker]
  auto_failed_score_amp:
    type: int
    tim_fields: [obj_tim.auto_failed_score_amp]
  auto_failed_score_speaker:
    type: int
    tim_fields: [obj_tim.auto_failed_score_speaker]
  avg_incap:
    tim_fields: [obj_tim.incap]
    type: float 
  avg_total_intakes:
    tim_fields: [obj_tim.total_intakes]
    type: float
  avg_total_pieces:
    tim_fields: [obj_tim.total_pieces]
    type: float
  avg_dropped_pieces: 
    tim_fields: [obj_tim.dropped_pieces]
    type: float
  lfm_auto_avg_speaker:
    tim_fields: [obj_tim.auto_speaker]
    type: float
  lfm_auto_avg_amp:
    tim_fields: [obj_tim.auto_amp]
    type: float
  lfm_auto_avg_total_intakes:
    tim_fields: [obj_tim.auto_total_intakes]
    type: float
  lfm_auto_avg_total_pieces:
    tim_fields: [obj_tim.auto_total_pieces]
    type: float
  lfm_tele_avg_speaker:
    tim_fields: [obj_tim.tele_speaker]
    type: float
  lfm_tele_avg_amp:
    tim_fields: [obj_tim.tele_amp]
    type: float
  lfm_tele_avg_intakes_poach:
    tim_fields: [obj_tim.tele_intakes_poach]
    type: float
  lfm_tele_avg_intakes_center:
    tim_fields: [obj_tim.tele_intakes_center]
    type: float
  lfm_tele_avg_intakes_far:
    tim_fields: [obj_tim.tele_intakes_far]
    type: float
  lfm_tele_avg_intakes_amp:
    tim_fields: [obj_tim.tele_intakes_amp]
    type: float
  lfm_avg_incap:
    tim_fields: [obj_tim.incap]
    type: float
  lfm_tele_avg_shoot_other:
    tim_fields: [obj_tim.tele_shoot_other]
    type: float
  lfm_avg_failed_scores:
    tim_fields: [obj_tim.failed_score]
    type: float
  lfm_tele_avg_total_intakes:
    tim_fields: [obj_tim.tele_total_intakes]
    type: float
  lfm_tele_avg_total_pieces:
    tim_fields: [obj_tim.tele_total_pieces]
    type: float
  lfm_avg_total_intakes:
    tim_fields: [obj_tim.total_intakes]
    type: float
  lfm_avg_incap:
    tim_fields: [obj_tim.incap]
    type: float
  lfm_avg_failed_score:
    tim_fields: [obj_tim.failed_score]
    type: float
  lfm_avg_failed_score_amp:
    tim_fields: [obj_tim.failed_score_amp]
    type: float
  lfm_avg_failed_score_speaker:
    tim_fields: [obj_tim.failed_score_speaker]
    type: float
  lfm_avg_total_pieces:
    tim_fields: [obj_tim.total_pieces]
    type: float
  lfm_avg_dropped_pieces:
    tim_fields: [obj_tim.dropped_pieces]
    type: float
  lfm_tele_avg_speaker_amped:
    tim_fields: [obj_tim.tele_speaker_amped]
    type: float

# Standard deviations of fields in consolidated TIMs
# Used for predictions
standard_deviations:
  auto_sd_amp:
    tim_fields: [obj_tim.auto_amp]
    type: float
  auto_sd_speaker:
    tim_fields: [obj_tim.auto_speaker]
    type: float
  auto_sd_total_intakes:
    tim_fields: [obj_tim.auto_total_intakes]
    type: float
  auto_sd_total_pieces:
    tim_fields: [obj_tim.auto_total_pieces]
    type: float
  tele_sd_amp:
    tim_fields: [obj_tim.tele_amp]
    type: float
  tele_sd_speaker:
    tim_fields: [obj_tim.tele_speaker]
    type: float
  tele_sd_speaker_amped:
    tim_fields: [obj_tim.tele_speaker_amped]
    type: float
  tele_sd_intakes_amp:
    tim_fields: [obj_tim.tele_intakes_amp]
    type: float
  tele_sd_intakes_center:
    tim_fields: [obj_tim.tele_intakes_center]
    type: float
  tele_sd_intakes_far:
    tim_fields: [obj_tim.tele_intakes_far]
    type: float
  tele_sd_intakes_poach:
    tim_fields: [obj_tim.tele_intakes_poach]
    type: float
  tele_sd_shoot_other:
    tim_fields: [obj_tim.tele_shoot_other]
    type: float
  tele_sd_total_intakes:
    tim_fields: [obj_tim.tele_total_intakes]
    type: float
  tele_sd_total_pieces:
    tim_fields: [obj_tim.tele_total_pieces]
    type: float
  sd_failed_score:
    tim_fields: [obj_tim.failed_score]
    type: float
  sd_failed_score_amp:
    tim_fields: [obj_tim.failed_score_amp]
    type: float
  sd_failed_score_speaker:
    tim_fields: [obj_tim.failed_score_speaker]
    type: float
  sd_incap:
    tim_fields: [obj_tim.incap]
    type: float
  sd_total_intakes:
    tim_fields: [obj_tim.total_intakes]
    type: float
  sd_total_pieces:
    tim_fields: [obj_tim.total_pieces]
    type: float
  sd_dropped_pieces: 
    tim_fields: [obj_tim.dropped_pieces]
    type: float
  lfm_auto_sd_total_pieces:
    tim_fields: [obj_tim.auto_total_pieces]
    type: float
  lfm_tele_sd_total_pieces:
    tim_fields: [obj_tim.tele_total_pieces]
    type: float
  lfm_tele_sd_shoot_other: 
    tim_fields: [obj_tim.tele_shoot_other]
    type: float
  lfm_sd_dropped_pieces: 
    tim_fields: [obj_tim.dropped_pieces]
    type: float

# Counts of occurrences in consolidated TIMs
counts:
  onstage_attempts:
    tim_fields:
      not:
        - obj_tim.chain_amp: 'N'
        - obj_tim.chain_blind: 'N'
        - obj_tim.chain_source: 'N'
    type: int
  onstage_successes:
    tim_fields:
      - obj_tim.chain_amp: 'S'
      - obj_tim.chain_blind: 'S'
      - obj_tim.chain_source: 'S'
    type: int
  trap_attempts:
    tim_fields:
      - obj_tim.trap: 'S'
      - obj_tim.trap: 'F'
    type: int
  trap_successes:
    tim_fields:
      obj_tim.trap: 'S'
    type: int
  parks:
    tim_fields:
      obj_tim.stage_level: 'P'
    type: int
  stage_fails:
    tim_fields:
      - obj_tim.chain_amp: 'F'
      - obj_tim.chain_blind: 'F'
      - obj_tim.chain_source: 'F'
    type: int
  position_zero_starts:
    tim_fields:
      obj_tim.start_position: '0'
    type: int
  position_one_starts:
    tim_fields:
      obj_tim.start_position: '1'
    type: int
  position_two_starts:
    tim_fields:
      obj_tim.start_position: '2'
    type: int
  position_three_starts:
    tim_fields:
      obj_tim.start_position: '3'
    type: int
  preloaded_starts:
    tim_fields:
      obj_tim.has_preload: True
    type: int
  matches_incap:
    tim_fields:
      not:
        obj_tim.incap: 0
    type: int
  matches_played:
    tim_fields:
      not:
        match_number: 0
    type: int
  lfm_onstage_attempts:
    tim_fields:
      not:
        - obj_tim.chain_amp: 'N'
        - obj_tim.chain_blind: 'N'
        - obj_tim.chain_source: 'N'
    type: int
  lfm_onstage_successes:
    tim_fields:
      - obj_tim.chain_amp: 'S'
      - obj_tim.chain_blind: 'S'
      - obj_tim.chain_source: 'S'
  lfm_trap_successes:
    tim_fields:
      obj_tim.trap: 'S'
    type: int
  lfm_trap_attempts:
    tim_fields:
      - obj_tim.trap: 'F'
      - obj_tim.trap: 'S'
    type: int
  lfm_parks:
    tim_fields:
      obj_tim.stage_level: 'P'
    type: int
  lfm_stage_fails:
    tim_fields:
      - obj_tim.chain_amp: 'F'
      - obj_tim.chain_blind: 'F'
      - obj_tim.chain_source: 'F'
  lfm_position_zero_starts:
    tim_fields:
      obj_tim.start_position: '0'
    type: int
  lfm_position_one_starts:
    tim_fields:
      obj_tim.start_position: '1'
    type: int
  lfm_position_two_starts:
    tim_fields:
      obj_tim.start_position: '2'
    type: int
  lfm_position_three_starts:
    tim_fields:
      obj_tim.start_position: '3'
    type: int
  lfm_preloaded_starts:
    tim_fields:
      obj_tim.has_preload: True
    type: int
  lfm_matches_incap:
    tim_fields:
      not:
        obj_tim.incap: 0
    type: int

# Objective counts collected by Super Scouts
super_counts:
  matches_tippy:
    type: int
    tim_fields: [subj_tim.was_tippy]
  lfm_matches_tippy:
    type: int
    tim_fields: [subj_tim.was_tippy]
  matches_climb_after:
    type: int
    tim_fields: [subj_tim.climb_after]
  lfm_matches_climb_after:
    type: int
    tim_fields: [subj_tim.climb_after]
  matches_played_defense:
    type: int
    tim_fields: [subj_tim.played_defense]
  lfm_matches_played_defense:
    type: int
    tim_fields: [subj_tim.played_defense]

# Maximum or minimum values in consolidated TIMs
extrema:
  auto_max_speaker:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_speaker]
  auto_max_amp:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_amp]
  auto_max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_total_intakes]
  auto_max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_total_pieces]
  tele_max_speaker:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_speaker]
  tele_max_speaker_amped:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_speaker_amped]
  tele_max_amp:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_amp]
  tele_max_shoot_other:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_shoot_other]
  tele_max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_total_intakes]
  tele_max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_total_pieces]
  max_incap_time:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.incap]
  max_failed_scores:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.failed_score]
  max_failed_score_amp:
    tim_fields: [obj_tim.failed_score_amp]
    type: int
    extrema_type: max
  max_failed_score_speaker:
    tim_fields: [obj_tim.failed_score_speaker]
    type: int
    extrema_type: max
  max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.total_intakes]
  max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.total_pieces]
  max_dropped_pieces: 
    extrema_type: max
    type: int 
    tim_fields: [obj_tim.dropped_pieces]
  lfm_auto_max_speaker:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_speaker]
  lfm_auto_max_amp:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_amp]
  lfm_auto_max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_total_intakes]
  lfm_auto_max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.auto_total_pieces]
  lfm_tele_max_speaker:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_speaker]
  lfm_tele_max_speaker_amped:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_speaker_amped]
  lfm_tele_max_amp:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_amp]
  lfm_tele_max_shoot_other:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_shoot_other]
  lfm_tele_max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_total_intakes]
  lfm_tele_max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.tele_total_pieces]
  lfm_max_incap_time:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.incap]
  lfm_max_failed_scores:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.failed_score]
  lfm_max_failed_score_amp:
    tim_fields: [obj_tim.failed_score_amp]
    type: int
    extrema_type: max
  lfm_max_failed_score_speaker:
    tim_fields: [obj_tim.failed_score_speaker]
    type: int
    extrema_type: max
  lfm_max_total_intakes:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.total_intakes]
  lfm_max_total_pieces:
    extrema_type: max
    type: int
    tim_fields: [obj_tim.total_pieces]
  lfm_max_dropped_pieces: 
    extrema_type: max 
    type: int 
    tim_fields: [obj_tim.dropped_pieces]

# Most common values
modes:
  mode_start_position:
    tim_fields: [obj_tim.start_position]
    ignore: '0'
    type: List
  lfm_mode_start_position:
    tim_fields: [obj_tim.start_position]
    ignore: '0'
    type: List
  mode_stage_level:
    tim_fields: [obj_tim.stage_level]
    ignore: 'N'
    type: List
  lfm_mode_stage_level:
    tim_fields: [obj_tim.stage_level]
    ignore: 'N'
    type: List

success_rates:
  onstage_percent_success:
    team_successes: [onstage_successes]
    team_attempts: [onstage_attempts]
    type: float
  trap_percent_success:
    team_successes: [trap_successes]
    team_attempts: [trap_attempts]
    type: float
  lfm_onstage_percent_success:
    team_successes: [lfm_onstage_successes]
    team_attempts: [lfm_onstage_attempts]
    type: float
  lfm_trap_percent_success:
    team_successes: [lfm_trap_successes]
    team_attempts: [lfm_trap_attempts]
    type: float

# Calculates all the medians
medians:
  median_nonzero_incap: 
    tim_fields: [obj_tim.incap]
    ignore: 0
    type: float
  lfm_median_nonzero_incap:
    tim_fields: [obj_tim.incap]
    ignore: 0
    type: float

# Calculates a sum of fields multiplied by point values
sums:
  auto_avg_total_points:
    auto_avg_amp : 2
    auto_avg_speaker : 5
    type: float
  tele_avg_total_points:
    tele_avg_amp: 1
    tele_avg_speaker: 2
    tele_avg_speaker_amped: 5
    type: float
  avg_endgame_points:
    onstage_percent_success: 3
    trap_percent_success: 5
    type: float
  avg_total_points:
    auto_avg_total_points: 1
    tele_avg_total_points: 1
    avg_endgame_points: 1
    type: float
  total_incap:
    type: int
  lfm_total_incap:
    type: int