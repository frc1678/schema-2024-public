# Used for calculating pick ability
#
# Example:
#
# {
#     "team_number": "9999",
#     "first_pickability": 0.7095,
#     "second_pickability": 5.4647,
#     "test_second_pickability": 2.2756,
#     "lfm_first_pickability": 2.0136,
#     "lfm_second_pickability": 6.1661,
#     "lfm_test_second_pickability": 2.8848
# }
#


# Contains information about this schema file
schema_file:
  # Version of schema file
  # Incremented every merged schema change
  version: 3

data:
  team_number:
    type: str
calculations:
  first_pickability:
    type: float
    tba_team.leave_successes: 2
    obj_team.auto_avg_amp: 2
    obj_team.auto_avg_speaker: 5
    obj_team.avg_expected_speaker_cycles: 3.4
    obj_team.avg_expected_amp_cycles: 3.4
    obj_team.trap_percent_success: 5
    obj_team.stage_percent_success_all: 3
  scoring_second_pickability:
    type: float
    obj_team.avg_expected_notes: 3.4
    obj_team.stage_percent_success_all: 3
    obj_team.trap_percent_success: 5
  defensive_rating_second_pickability:
    type: float
    ss_team.avg_defense_rating_squared: 0.92
    obj_team.stage_percent_success_all: 3
    obj_team.trap_percent_success: 5
  ferrying_second_pickability:
    type: float
    obj_team.avg_expected_cycles: 3.15
    obj_team.stage_percent_success_all: 3
    obj_team.trap_percent_success: 5
  defense_proxy_second_pickability:
    type: float
    # proxy is (driver_ability + 3)^2
    subj_team.proxy_driver_ability: 0.75
    obj_team.stage_percent_success_all: 3
    obj_team.trap_percent_success: 5
  # Accessory Speaker scoring bot formula: Auto = 5*% made + if(Source only=1,0,1)
  # *Notes scored*3.4[PPN on our alliance] + Climb*3 + DriverAbilityWeightScoring*DriverAbility 
  # (DriverAbility calculated as 80% Speed+20% Awareness)
  accessory_speaker_bot_second_pickability:
    type: float
    obj_team.auto_speaker_percent_success: 5
    obj_team.stage_percent_success_all: 3
    subj_team.driver_ability: 0 # 0 is the DriverAbilityWeightScoring (currently at 0 for Sac)
    obj_team.tele_avg_total_pieces: 3.4
  # Defense bot formula: Auto = 5*% made + made Climb%*3 + 
  # 10 Notes*3.4*(DriverAbility rescaled to extend from 0 to 4 to reflect Stand Strategist ratings) 
  # (DriverAbility calculated as 25% Speed+75% Awareness). 
  # The Defense rating assumes that a level 5 D can reduce Notes scored by 10, and 1 D has zero impact.
  defense_bot_second_pickability:
    type: float
    obj_team.auto_speaker_percent_success: 5
    obj_team.stage_percent_success_all: 3
    subj_team.defensive_driver_ability: 1
    obj_team.tele_avg_total_pieces: 3.4
  # Ferrying bot formula: Accessory Speaker scoring bot formula: Auto = 5*% made + 
  # if(Source only=1,0,1)*Expected Full Cycles*3.4[PPN on our alliance] + Climb*3 + DriverAbilityWeightFerrying*DriverAbility 
  # (DriverAbility calculated as 80% Speed+20% Awareness)
  ferrying_bot_second_pickability:
    type: float
    obj_team.auto_speaker_percent_success: 5
    obj_team.stage_percent_success_all: 3
    subj_team.driver_ability: 1
    obj_team.avg_expected_cycles: 3.4
  # LFM pickabilities
  lfm_first_pickability:
    type: float
    obj_team.lfm_avg_total_points: 1
    obj_team.lfm_auto_avg_speaker: 5
    obj_team.lfm_auto_avg_amp: 2
    obj_team.lfm_avg_expected_speaker_cycles: 3.4
    obj_team.lfm_avg_expected_amp_cycles: 3.4
    obj_team.lfm_trap_percent_success: 5
    obj_team.lfm_stage_percent_success_all: 3
  lfm_scoring_second_pickability:
    type: float
    obj_team.lfm_avg_expected_notes: 3.4
    obj_team.lfm_stage_percent_success_all: 3
    obj_team.lfm_trap_percent_success: 5
  lfm_defensive_rating_second_pickability:
    type: float
    ss_team.avg_defense_rating_squared: 0.92
    obj_team.lfm_stage_percent_success_all: 3
    obj_team.lfm_trap_percent_success: 5
  lfm_ferrying_second_pickability:
    type: float
    obj_team.lfm_avg_expected_cycles: 3.15
    obj_team.lfm_stage_percent_success_all: 3
    obj_team.lfm_trap_percent_success: 5
  lfm_defense_proxy_second_pickability:
    type: float
    # proxy is (driver_ability + 3)^2
    subj_team.proxy_driver_ability: 0.75
    obj_team.lfm_stage_percent_success_all: 3
    obj_team.lfm_trap_percent_success: 5
  lfm_accessory_scoring_bot_second_pickability:
    type: float
    obj_team.lfm_auto_speaker_percent_success: 5
    obj_team.lfm_stage_percent_success_all: 3
    subj_team.driver_ability: 0 # 0 is the DriverAbilityWeightScoring (currently at 0 for Sac)
    obj_team.lfm_tele_avg_total_pieces: 3.4
  lfm_defense_bot_second_pickability:
    type: float
    obj_team.lfm_auto_speaker_percent_success: 5
    obj_team.lfm_stage_percent_success_all: 3
    subj_team.defensive_driver_ability: 1
    obj_team.lfm_tele_avg_total_pieces: 3.4
  lfm_ferrying_bot_second_pickability:
    type: float
    obj_team.lfm_auto_speaker_percent_success: 5
    obj_team.lfm_stage_percent_success_all: 3
    subj_team.driver_ability: 1
    obj_team.lfm_avg_expected_cycles: 3.4
  # These are the old weights (not seen in viewer, but kept for comparison)
  test_second_pickability:
    type: float
    obj_team.avg_total_points: 1